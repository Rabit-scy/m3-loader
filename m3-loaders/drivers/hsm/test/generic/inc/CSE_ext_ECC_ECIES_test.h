/*
    SPC5-CRYPTO - Copyright (C) 2015 STMicroelectronics

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
*/

/**
 * @file    CSE_ext_ECC_ECIES_test.h
 * @brief   ECC ECIES tests header file
 * @details
 *
 *
 * @addtogroup CSE_driver_test
 * @{
 */
#ifndef _CSE_EXT_ECIES_TEST_H_
#define _CSE_EXT_ECIES_TEST_H_

#include "cse_types.h"
#include "CSE_ext_ECC.h"

/**
* @brief  ECC ECIES Encryption
*
* @param    *P_pPubKey           Pointer to \ref ECCpubKeyByteArray_stt structure describing the Recipient's Public Key
* @param    *P_pMessageToEncrypt Pointer to \ref ByteArrayDescriptor_stt describing message to encrypt
* @param    *P_pEciesSharedData  Pointer to \ref ECIES_sharedData_stt describing the ECIES Shared Data (shared information)
* @param    *P_pEncryptedMessage Pointer to \ref ECIES_encMsg_stt describing the Encrypted Message
* @param    verbose              To activate verbose mode during test
*
* @retval error status: ECC_SUCCESS, ECC_ERR_BAD_PARAMETER, CSE_GENERAL_ERR
*/
int32_t ECC_ecies_encryption(struct ECCpubKeyByteArray_stt * P_pPubKey,
                             struct ByteArrayDescriptor_stt * P_pMessageToEncrypt,
                             struct ECIES_sharedData_stt * P_pEciesSharedData,
                             struct ECIES_encMsg_stt *P_pEncryptedMessage,
                             uint32_t P_verbose);

/**
* @brief      ECC ECIES decryption test
* @details    The function implements test of following ECIES decryption scheme:
*              - Diffie-Hellman for Key Agreement
*              - ANS X9.63 for Key Derivation Function
*              - AES-128 in CBC mode for Encryption and IV value at zero
*              - CMAC-AES-128 for CMAC tag computation
* @note    The test performs decrytion of Known Answer Test Vectors generated by OpenSSL
*
* @param[in]     verbose
*
*/
extern uint32_t ecc_ecies_decryption_test(uint32_t verbose);

uint32_t ecc_ecies_encryptionDecryption_test(uint32_t verbose);

#endif /* _CSE_EXT_ECIES_TEST_H_ */
